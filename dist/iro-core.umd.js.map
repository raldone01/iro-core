{"version":3,"file":"iro-core.umd.js","sources":["../src/color.ts","../src/slider.ts","../src/wheel.ts","../src/box.ts","../src/util.ts","../src/colorPickerOptions.ts"],"sourcesContent":["// Some regular expressions for rgb() and hsl() Colors are borrowed from tinyColor\n// https://github.com/bgrins/TinyColor\n// Kelvin temperature math borrowed from Neil Barlett's implementation\n// from https://github.com/neilbartlett/color-temperature\n\n// https://www.w3.org/TR/css3-values/#integers\nconst CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// http://www.w3.org/TR/css3-values/#number-value\nconst CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number. Don't capture the either/or, just the entire outcome\nconst CSS_UNIT = '(?:' + CSS_NUMBER + ')|(?:' + CSS_INTEGER + ')';\n\n// Parse function params\n// Parens and commas are optional, and this also allows for whitespace between numbers\nconst PERMISSIVE_MATCH_3 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\nconst PERMISSIVE_MATCH_4 = '[\\\\s|\\\\(]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')[,|\\\\s]+(' + CSS_UNIT + ')\\\\s*\\\\)?';\n\n// Regex patterns for functional color strings\nconst REGEX_FUNCTIONAL_RGB = new RegExp('rgb' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_RGBA = new RegExp('rgba' + PERMISSIVE_MATCH_4);\nconst REGEX_FUNCTIONAL_HSL = new RegExp('hsl' + PERMISSIVE_MATCH_3);\nconst REGEX_FUNCTIONAL_HSLA = new RegExp('hsla' + PERMISSIVE_MATCH_4);\n\n// Color string parsing regex\nconst HEX_START = '^(?:#?|0x?)';\nconst HEX_INT_SINGLE = '([0-9a-fA-F]{1})';\nconst HEX_INT_DOUBLE = '([0-9a-fA-F]{2})';\nconst REGEX_HEX_3 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_4 = new RegExp(HEX_START + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + HEX_INT_SINGLE + '$');\nconst REGEX_HEX_6 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\nconst REGEX_HEX_8 = new RegExp(HEX_START + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + HEX_INT_DOUBLE + '$');\n\n// Kelvin temperature bounds\nconst KELVIN_MIN = 1000;\nconst KELVIN_MAX = 40000;\n\n// Math shorthands\nconst { log, round, floor } = Math;\n\n/**\n * @desc Clamp a number between a min and max value\n * @param num - input value\n * @param min - min allowed value\n * @param max - max allowed value\n */\nfunction clamp(num: number, min: number, max: number): number {\n  return Math.min(Math.max(num, min), max)\n}\n\n/**\n * @desc Parse a css unit string - either regular int or a percentage number\n * @param str - css unit string\n * @param max - max unit value, used for calculating percentages\n */\nfunction parseUnit(str: string, max: number): number {\n  const isPercentage = str.indexOf('%') > -1;\n  const num = parseFloat(str);\n  return isPercentage ? (max / 100) * num : num;\n}\n\n/**\n * @desc Parse hex str to an int\n * @param str - hex string to parse\n */\nfunction parseHexInt(str: string): number {\n  return parseInt(str, 16);\n}\n\n/**\n * @desc Convert nunber into to 2-digit hex\n * @param int - number to convert\n */\nfunction intToHex(int: number): string {\n  return int.toString(16).padStart(2, '0');\n}\n\nexport interface ColorChanges {\n  h: boolean;\n  s: boolean;\n  v: boolean;\n  a: boolean;\n}\n\n// all hsv color channels are optional by design\nexport interface HsvColor {\n  h?: number;\n  s?: number;\n  v?: number;\n  a?: number;\n}\n\nexport interface RgbColor {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport interface HslColor {\n  h: number;\n  s: number;\n  l: number;\n  a?: number;\n}\n\nexport type IroColorValue = IroColor | HsvColor | RgbColor | HslColor | string;\n\nexport class IroColor {\n  // internal color value storage\n  private $: HsvColor;\n  private onChange: Function;\n  private initialValue: HsvColor;\n\n  public index: number;\n\n  /**\n    * @constructor Color object\n    * @param value - initial color value\n  */\n  constructor(value?: IroColorValue, onChange?: Function) {\n    // The default Color value\n    this.$ = {h: 0, s: 0, v: 0, a: 1};\n    if (value) this.set(value);\n    // The watch callback function for this Color will be stored here\n    this.onChange = onChange;\n    this.initialValue = { ...this.$ }; // copy initial value\n  }\n\n  /**\n    * @desc Set the Color from any valid value\n    * @param value - new color value\n  */\n  public set(value: IroColorValue) {\n    if (typeof value === 'string') {\n      if (/^(?:#?|0x?)[0-9a-fA-F]{3,8}$/.test(value as string)) {\n        this.hexString = value as string;\n      }\n      else if (/^rgba?/.test(value as string)) {\n        this.rgbString = value as string;\n      }\n      else if (/^hsla?/.test(value as string)) {\n        this.hslString = value as string;\n      }\n    }\n    else if (typeof value === 'object') {\n      if (value instanceof IroColor) {\n        this.hsv = value.hsv;\n      }\n      else if (typeof value === 'object' && ('r' in value) && ('g' in value) && ('b' in value)) {\n        this.rgb = value;\n      }\n      else if (typeof value === 'object' && ('h' in value) && ('s' in value) && ('v' in value)) {\n        this.hsv = value;\n      }\n      else if (typeof value === 'object' && ('h' in value) && ('s' in value) && ('l' in value)) {\n        this.hsl = value;\n      }\n    }\n    else {\n      throw new Error('Invalid color value');\n    }\n  }\n\n  /**\n    * @desc Shortcut to set a specific channel value\n    * @param format - hsv | hsl | rgb\n    * @param channel - individual channel to set, for example if model = hsl, chanel = h | s | l\n    * @param value - new value for the channel\n  */\n  public setChannel(format: string, channel: string, value: number) {\n    this[format] = {...this[format], [channel]: value};\n  }\n\n  /**\n   * @desc Reset color back to its initial value\n   */\n  public reset() {\n    this.hsva = this.initialValue;\n  }\n\n  /**\n    * @desc make new Color instance with the same value as this one\n  */\n  public clone() {\n    return new IroColor(this);\n  }\n\n  /**\n   * @desc remove color onChange\n   */\n  public unbind() {\n    this.onChange = undefined;\n  }\n\n  /**\n    * @desc Convert hsv object to rgb\n    * @param hsv - hsv color object\n  */\n  public static hsvToRgb(hsv: HsvColor): RgbColor {\n    const h = hsv.h / 60;\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const i = floor(h);\n    const f = h - i;\n    const p = v * (1 - s);\n    const q = v * (1 - f * s);\n    const t = v * (1 - (1 - f) * s);\n    const mod = i % 6;\n    const r = [v, q, p, p, t, v][mod];\n    const g = [t, v, v, q, p, p][mod];\n    const b = [p, p, t, v, v, q][mod];\n    return {\n      r: clamp(r * 255, 0, 255), \n      g: clamp(g * 255, 0, 255), \n      b: clamp(b * 255, 0, 255)\n    };\n  }\n\n  /**\n    * @desc Convert rgb object to hsv\n    * @param rgb - rgb object\n  */\n  public static rgbToHsv(rgb: RgbColor): HsvColor {\n    const r = rgb.r / 255;\n    const g = rgb.g / 255;\n    const b = rgb.b / 255;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const delta = max - min;\n    let hue = 0;\n    let value = max;\n    let saturation = max === 0 ? 0 : delta / max;\n    switch (max) {\n      case min: \n        hue = 0; // achromatic\n        break;\n      case r: \n        hue = (g - b) / delta + (g < b ? 6 : 0);\n        break;\n      case g: \n        hue = (b - r) / delta + 2;\n        break;\n      case b:\n        hue = (r - g) / delta + 4;\n        break;\n    }\n    return {\n      h: (hue * 60) % 360,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp(value * 100, 0, 100)\n    }\n  }\n\n  /**\n    * @desc Convert hsv object to hsl\n    * @param hsv - hsv object\n  */\n  public static hsvToHsl(hsv: HsvColor): HslColor {\n    const s = hsv.s / 100;\n    const v = hsv.v / 100;\n    const l = (2 - s) * v;\n    const divisor = l <= 1 ? l : (2 - l);\n    // Avoid division by zero when lightness is close to zero\n    const saturation = divisor < 1e-9 ? 0 : (s * v) / divisor;\n    return {\n      h: hsv.h,\n      s: clamp(saturation * 100, 0, 100),\n      l: clamp(l * 50, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert hsl object to hsv\n    * @param hsl - hsl object\n  */\n  public static hslToHsv(hsl: HslColor): HsvColor {\n    const l = hsl.l * 2;\n    const s = (hsl.s * ((l <= 100) ? l : 200 - l)) / 100;\n    // Avoid division by zero when l + s is near 0\n    const saturation = (l + s < 1e-9) ? 0 : (2 * s) / (l + s);\n    return {\n      h: hsl.h,\n      s: clamp(saturation * 100, 0, 100),\n      v: clamp((l + s) / 2, 0, 100)\n    };\n  }\n\n  /**\n    * @desc Convert a kelvin temperature to an approx, RGB value\n    * @param kelvin - kelvin temperature\n  */\n  public static kelvinToRgb(kelvin: number): RgbColor {\n    const temp = kelvin / 100;\n    let r, g, b;\n    if (temp < 66) {\n      r = 255\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log(g)\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log(b)\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log(r)\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log(g)\n      b = 255\n    }\n    return {\n      r: clamp(floor(r), 0, 255),\n      g: clamp(floor(g), 0, 255),\n      b: clamp(floor(b), 0, 255)\n    };\n  }\n\n   /**\n    * @desc Convert an RGB color to an approximate kelvin temperature\n    * @param kelvin - kelvin temperature\n  */\n  public static rgbToKelvin(rgb: RgbColor): number {\n    const { r, g, b } = rgb;\n    const eps = 0.4;\n    let minTemp = KELVIN_MIN;\n    let maxTemp = KELVIN_MAX;\n    let temp;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      const rgb = IroColor.kelvinToRgb(temp);\n      if ((rgb.b / rgb.r) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return temp;\n  }\n\n  public get hsv(): HsvColor {\n    // value is cloned to allow changes to be made to the values before passing them back\n    const value = this.$;\n    return {h: value.h, s: value.s, v: value.v};\n  }\n\n  public set hsv(newValue: HsvColor) {\n    const oldValue = this.$;\n\n    newValue = { ...oldValue, ...newValue };\n    // If this Color is being watched for changes we need to compare the new and old values to check the difference\n    // Otherwise we can just be lazy\n    if (this.onChange) {\n      // Compute changed values\n      let changes: ColorChanges = {\n        h: false,\n        v: false,\n        s: false,\n        a: false,\n      };\n\n      for (let key in oldValue) {\n        changes[key] = newValue[key] != oldValue[key]\n      };\n      // Update the old value\n      this.$ = newValue;\n      // If the value has changed, call hook callback\n      if (changes.h || changes.s || changes.v || changes.a) this.onChange(this, changes);\n    } else {\n      this.$ = newValue;\n    }\n  }\n\n  public get hsva(): HsvColor {\n    return {...this.$};\n  }\n\n  public set hsva(value: HsvColor) {\n    this.hsv = value;\n  }\n\n  public get hue(): number {\n    return this.$.h;\n  }\n\n  public set hue(value: number) {\n    this.hsv = { h: value };\n  }\n\n  public get saturation(): number {\n    return this.$.s;\n  }\n\n  public set saturation(value: number) {\n    this.hsv = { s: value };\n  }\n\n  public get value(): number {\n    return this.$.v;\n  }\n\n  public set value(value: number) {\n    this.hsv = { v: value };\n  }\n\n  public get alpha(): number {\n    return this.$.a;\n  }\n\n  public set alpha(value: number) {\n    this.hsv = { ...this.hsv, a: value };\n  }\n\n  public get kelvin(): number {\n    return IroColor.rgbToKelvin(this.rgb);\n  }\n\n  public set kelvin(value: number) {\n    this.rgb = IroColor.kelvinToRgb(value);\n  }\n\n  public get red(): number {\n    const rgb = this.rgb;\n    return rgb.r;\n  }\n\n  public set red(value: number) {\n    this.rgb = { ...this.rgb, r: value };\n  }\n\n  public get green(): number {\n    const rgb = this.rgb;\n    return rgb.g;\n  }\n\n  public set green(value: number) {\n    this.rgb = { ...this.rgb, g: value };\n  }\n\n  public get blue(): number {\n    const rgb = this.rgb;\n    return rgb.b;\n  }\n\n  public set blue(value: number) {\n    this.rgb = { ...this.rgb, b: value };\n  }\n\n  public get rgb(): RgbColor {\n    const {r, g, b} = IroColor.hsvToRgb(this.$);\n    return {\n      r: round(r),\n      g: round(g),\n      b: round(b),\n    };\n  }\n\n  public set rgb(value: RgbColor) {\n    this.hsv = {\n      ...IroColor.rgbToHsv(value), \n      a: (value.a === undefined) ? 1 : value.a\n    };\n  }\n\n  public get rgba(): RgbColor {\n    return { ...this.rgb, a: this.alpha };\n  }\n\n  public set rgba(value: RgbColor) {\n    this.rgb = value;\n  }\n\n  public get hsl(): HslColor {\n    const {h, s, l} = IroColor.hsvToHsl(this.$);\n    return {\n      h: round(h),\n      s: round(s),\n      l: round(l),\n    };\n  }\n\n  public set hsl(value: HslColor) {\n    this.hsv = {\n      ...IroColor.hslToHsv(value), \n      a: (value.a === undefined) ? 1 : value.a\n    };\n  }\n\n  public get hsla(): HslColor {\n    return { ...this.hsl, a: this.alpha };\n  }\n\n  public set hsla(value: HslColor) {\n    this.hsl = value;\n  }\n\n  public get rgbString(): string {\n    const rgb = this.rgb;\n    return `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`;\n  }\n\n  public set rgbString(value: string) {\n    let match;\n    let r, g, b, a = 1;\n    if (match = REGEX_FUNCTIONAL_RGB.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n    }\n    else if (match = REGEX_FUNCTIONAL_RGBA.exec(value)) {\n      r = parseUnit(match[1], 255);\n      g = parseUnit(match[2], 255);\n      b = parseUnit(match[3], 255);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a};\n    } \n    else {\n      throw new Error('Invalid rgb string');\n    }\n  }\n\n  public get rgbaString(): string {\n    const rgba = this.rgba;\n    return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n  }\n\n  public set rgbaString(value: string) {\n    this.rgbString = value;\n  }\n\n  public get hexString(): string {\n    const rgb = this.rgb;\n    return `#${ intToHex(rgb.r) }${ intToHex(rgb.g) }${ intToHex(rgb.b) }`;\n  }\n\n  public set hexString(value: string) {\n    let match;\n    let r, g, b, a = 255;\n    if (match = REGEX_HEX_3.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n    }\n    else if (match = REGEX_HEX_4.exec(value)) {\n      r = parseHexInt(match[1]) * 17;\n      g = parseHexInt(match[2]) * 17;\n      b = parseHexInt(match[3]) * 17;\n      a = parseHexInt(match[4]) * 17;\n    }\n    else if (match = REGEX_HEX_6.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n    }\n    else if (match = REGEX_HEX_8.exec(value)) {\n      r = parseHexInt(match[1]);\n      g = parseHexInt(match[2]);\n      b = parseHexInt(match[3]);\n      a = parseHexInt(match[4]);\n    }\n    if (match) {\n      this.rgb = {r, g, b, a: a / 255};\n    }\n    else {\n      throw new Error('Invalid hex string');\n    }\n  }\n\n  public get hex8String(): string {\n    const rgba = this.rgba;\n    return `#${intToHex(rgba.r)}${intToHex(rgba.g)}${intToHex(rgba.b)}${intToHex(floor(rgba.a * 255))}`;\n  }\n\n  public set hex8String(value: string) {\n    this.hexString = value;\n  }\n\n  public get hslString(): string {\n    const hsl = this.hsl;\n    return `hsl(${hsl.h}, ${hsl.s}%, ${hsl.l}%)`;\n  }\n\n  public set hslString(value: string) {\n    let match;\n    let h, s, l, a = 1;\n    if (match = REGEX_FUNCTIONAL_HSL.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n    }\n    else if (match = REGEX_FUNCTIONAL_HSLA.exec(value)) {\n      h = parseUnit(match[1], 360);\n      s = parseUnit(match[2], 100);\n      l = parseUnit(match[3], 100);\n      a = parseUnit(match[4], 1);\n    }\n    if (match) {\n      this.hsl = {h, s, l, a};\n    } \n    else {\n      throw new Error('Invalid hsl string');\n    }\n  }\n\n  public get hslaString(): string {\n    const hsla = this.hsla;\n    return `hsl(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n  }\n\n  public set hslaString(value: string) {\n    this.hslString = value;\n  }\n}","import { IroColor } from './color';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport type SliderShape = 'bar' | 'circle' | '';\nexport type SliderType = 'red' | 'green' | 'blue' |'alpha' | 'hue' | 'saturation' | 'value' | 'kelvin' | '';\n\nexport interface SliderOptions extends IroColorPickerOptions {\n  color: IroColor;\n  sliderShape: SliderShape;\n  sliderType: SliderType;\n  minTemperature: number;\n  maxTemperature: number;\n}\n\nexport const sliderDefaultOptions = {\n  sliderShape: 'bar',\n  sliderType: 'value',\n  minTemperature: 2200,\n  maxTemperature: 11000\n}\n\n/**\n * @desc Get the CSS styles for the slider root\n * @param props - slider props\n */\nexport function getSliderStyles(props: Partial<SliderOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the slider\n * @param props - slider props\n */\nexport function getSliderDimensions(props: Partial<SliderOptions>) {\n  let { width, sliderSize: sliderSize, borderWidth, handleRadius, padding, sliderShape } = props;\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  // automatically calculate sliderSize if its not defined\n  sliderSize = sliderSize ? sliderSize : padding * 2 + handleRadius * 2 + borderWidth * 2;\n  if (sliderShape === 'circle') {\n    return {\n      handleStart: props.padding + props.handleRadius,\n      handleRange: width - padding * 2 - handleRadius * 2 - borderWidth * 2,\n      width: width,\n      height: width,\n      cx: width / 2,\n      cy: width / 2,\n      radius: width / 2 - borderWidth / 2\n    }\n  } else {\n    return {\n      handleStart: sliderSize / 2,\n      handleRange: width - sliderSize,\n      radius: sliderSize / 2,\n      x: 0,\n      y: 0,\n      width: ishorizontal ? sliderSize : width,\n      height: ishorizontal ? width : sliderSize,\n    }\n  }\n}\n\n/**\n * @desc Get the current slider value for a given color, as a percentage\n * @param props - slider props\n * @param color\n */\nexport function getCurrentSliderValue(props: Partial<SliderOptions>, color: IroColor) {\n  const hsva = color.hsva;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return rgb.r / 2.55;\n    case 'green':\n      return rgb.g / 2.55;\n    case 'blue':\n      return rgb.b / 2.55;\n    case 'alpha':\n      return hsva.a * 100;\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      const percent = ((color.kelvin - minTemperature) / temperatureRange) * 100;\n      // clmap percentage\n      return Math.max(0, Math.min(percent, 100));\n    case 'hue':\n      return hsva.h /= 3.6;\n    case 'saturation':\n      return hsva.s;\n    case 'value':\n    default:\n      return hsva.v;\n  }\n}\n\n/**\n * @desc Get the current slider value from user input\n * @param props - slider props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getSliderValueFromInput(props: Partial<SliderOptions>, x: number, y: number) {\n  const { handleRange, handleStart } = getSliderDimensions(props);\n  let handlePos;\n  if (props.layoutDirection === 'horizontal') {\n    handlePos = -1 * y + handleRange + handleStart;\n  } else {\n    handlePos = x - handleStart;\n  }\n  // clamp handle position\n  handlePos = Math.max(Math.min(handlePos, handleRange), 0);\n  const percent = Math.round((100 / handleRange) * handlePos);\n  switch (props.sliderType) {\n    case 'kelvin':\n      const { minTemperature, maxTemperature } = props;\n      const temperatureRange = maxTemperature - minTemperature;\n      return minTemperature + temperatureRange * (percent / 100);\n    case 'alpha':\n      return percent / 100;\n    case 'hue':\n      return percent * 3.6;\n    case 'red':\n    case 'blue':\n    case 'green':\n      return percent * 2.55;\n    default:\n      return percent;\n  }\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - slider props\n * @param color\n */\nexport function getSliderHandlePosition(props: Partial<SliderOptions>, color: IroColor) {\n  const { width, height, handleRange, handleStart } = getSliderDimensions(props);\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  const sliderValue = getCurrentSliderValue(props, color);\n  const midPoint = ishorizontal ? width / 2 : height / 2;\n  let handlePos = handleStart + (sliderValue / 100) * handleRange;\n  if (ishorizontal) {\n    handlePos = -1 * handlePos + handleRange + handleStart * 2;\n  } \n  return {x: ishorizontal ? midPoint : handlePos, y: ishorizontal ? handlePos : midPoint};\n}\n\n/**\n * @desc Get the gradient stops for a slider\n * @param props - slider props\n * @param color\n */\nexport function getSliderGradient(props: Partial<SliderOptions>, color: IroColor) {\n  const hsv = color.hsv;\n  const rgb = color.rgb;\n\n  switch (props.sliderType) {\n    case 'red':\n      return [\n        [0, `rgb(${ 0 },${ rgb.g },${ rgb.b })`],\n        [100, `rgb(${ 255 },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'green':\n      return [\n        [0, `rgb(${ rgb.r },${ 0 },${ rgb.b })`],\n        [100, `rgb(${ rgb.r },${ 255 },${ rgb.b })`],\n      ];\n    case 'blue':\n      return [\n        [0, `rgb(${ rgb.r },${ rgb.g },${ 0 })`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ 255 })`],\n      ];\n    case 'alpha':\n      return [\n        [0, `rgba(${ rgb.r },${ rgb.g },${ rgb.b },0)`],\n        [100, `rgb(${ rgb.r },${ rgb.g },${ rgb.b })`],\n      ];\n    case 'kelvin':\n      const stops = [];\n      const min = props.minTemperature;\n      const max = props.maxTemperature;\n      const numStops = 8;\n      const range = max - min;\n      for (let kelvin = min, stop = 0; kelvin < max; kelvin += range / numStops, stop += 1) {\n        const { r, g, b } = IroColor.kelvinToRgb(kelvin);\n        stops.push([ 100 / numStops * stop, `rgb(${r},${g},${b})` ]);\n      }\n      return stops;\n    case 'hue':\n      return [\n        [0,      '#f00'],\n        [16.666, '#ff0'],\n        [33.333, '#0f0'],\n        [50,     '#0ff'],\n        [66.666, '#00f'],\n        [83.333, '#f0f'],\n        [100,    '#f00'],\n      ];\n    case 'saturation':\n      const noSat = IroColor.hsvToHsl({h: hsv.h, s: 0, v: hsv.v});\n      const fullSat = IroColor.hsvToHsl({h: hsv.h, s: 100, v: hsv.v});\n      return [\n        [0, `hsl(${noSat.h},${noSat.s}%,${noSat.l}%)`],\n        [100, `hsl(${fullSat.h},${fullSat.s}%,${fullSat.l}%)`]\n      ];\n    case 'value':\n    default:\n      const hsl = IroColor.hsvToHsl({h: hsv.h, s: hsv.s, v: 100});\n      return [\n        [0, '#000'],\n        [100, `hsl(${hsl.h},${hsl.s}%,${hsl.l}%)`]\n      ];\n  }\n}\n\n/**\n * @desc Get the gradient coords for a slider\n * @param props - slider props\n */\nexport function getSliderGradientCoords(props: Partial<SliderOptions>) {\n  const ishorizontal = props.layoutDirection === 'horizontal';\n  return {\n    x1: '0%',\n    y1: ishorizontal ? '100%' : '0%',\n    x2: ishorizontal ? '0%' : '100%',\n    y2: '0%'\n  }\n}","import { IroColorPickerOptions } from './colorPickerOptions';\nimport { IroColor, IroColorValue } from './color';\n\nexport interface WheelProps extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the point as the center of the wheel\n * @param props - wheel props\n */\nexport function getWheelDimensions(props: Partial<WheelProps>) {\n  const rad = props.width / 2;\n  return {\n    width: props.width,\n    radius: rad - props.borderWidth,\n    cx: rad,\n    cy: rad\n  };\n}\n\n/**\n * @desc Translate an angle according to wheelAngle and wheelDirection\n * @param props - wheel props\n * @param angle - input angle\n */\nexport function translateWheelAngle(props: Partial<WheelProps>, angle: number, invert?: boolean) {\n  const wheelAngle = props.wheelAngle;\n  const wheelDirection = props.wheelDirection\n  if ((!invert && wheelDirection === 'clockwise') || (invert && wheelDirection === 'anticlockwise')) {\n    angle = (invert ? 180 : 360) - (wheelAngle - angle);\n  } \n  else {\n    angle = wheelAngle + angle;\n  }\n  // javascript's modulo operator doesn't produce positive numbers with negative input\n  // https://dev.to/maurobringolf/a-neat-trick-to-compute-modulo-of-negative-numbers-111e\n  return (angle % 360 + 360) % 360;\n}\n\n/**\n * @desc Get the current handle position for a given color\n * @param props - wheel props\n * @param color\n */\nexport function getWheelHandlePosition(props: Partial<WheelProps>, color: IroColor) {\n  const hsv = color.hsv;\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n  const handleAngle = (180 + translateWheelAngle(props, hsv.h, true)) * (Math.PI / 180);\n  const handleDist = (hsv.s / 100) * handleRange;\n  const direction = props.wheelDirection === 'clockwise' ? -1 : 1;\n  return {\n    x: cx + handleDist * Math.cos(handleAngle) * direction,\n    y: cy + handleDist * Math.sin(handleAngle) * direction,\n  }\n}\n\n/**\n * @desc Get the current wheel value from user input\n * @param props - wheel props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getWheelValueFromInput(props: Partial<WheelProps>, x: number, y: number) {\n  const { cx, cy } = getWheelDimensions(props);\n  const handleRange = props.width / 2 - props.padding - props.handleRadius - props.borderWidth;\n  x = cx - x;\n  y = cy - y;\n  // Calculate the hue by converting the angle to radians\n  const hue = translateWheelAngle(props, Math.atan2(-y, -x) * (180 / Math.PI));\n  // Find the point's distance from the center of the wheel\n  // This is used to show the saturation level\n  const handleDist = Math.min(Math.sqrt(x * x + y * y), handleRange);\n  return {\n    h: Math.round(hue),\n    s: Math.round((100 / handleRange) * handleDist)\n  };\n}","import { IroColor } from './color';\nimport { IroColorPickerOptions } from './colorPickerOptions';\n\nexport interface BoxOptions extends IroColorPickerOptions {\n  color: IroColor;\n}\n\n/**\n * @desc Get the CSS styles for the box root element\n * @param props - box props\n */\nexport function getBoxStyles(props: Partial<BoxOptions>) {\n  return {\n    [props.layoutDirection === 'horizontal' ? 'marginLeft' : 'marginTop']: props.sliderMargin\n  }\n}\n\n/**\n * @desc Get the bounding dimensions of the box\n * @param props - box props\n */\nexport function getBoxDimensions(props: Partial<BoxOptions>) {\n  const { width, padding, handleRadius } = props;\n  return {\n    width: width,\n    height: width,\n    radius: padding + handleRadius\n  };\n}\n\n/**\n * @desc Get the current box value from user input\n * @param props - box props\n * @param x - global input x position\n * @param y - global input y position\n */\nexport function getBoxValueFromInput(props: Partial<BoxOptions>, x: number, y: number) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  const percentX = ((x - handleStart) / handleRangeX) * 100;\n  const percentY = ((y - handleStart) / handleRangeY) * 100;\n  return {\n    s: Math.max(0, Math.min(percentX, 100)),\n    v: Math.max(0, Math.min(100 - percentY, 100))\n  }\n}\n\n/**\n * @desc Get the current box handle position for a given color\n * @param props - box props\n * @param color\n */\nexport function getBoxHandlePosition(props: Partial<BoxOptions>, color: IroColor) {\n  const { width, height, radius } = getBoxDimensions(props);\n  const hsv = color.hsv;\n  const handleStart = radius;\n  const handleRangeX = width - radius * 2;\n  const handleRangeY = height - radius * 2;\n  return { \n    x: handleStart + (hsv.s / 100) * handleRangeX,\n    y: handleStart + (handleRangeY - ((hsv.v / 100) * handleRangeY))\n  }\n}\n\n/**\n * @desc Get the gradient stops for a box\n * @param props - box props\n * @param color\n */\nexport function getBoxGradients(props: Partial<BoxOptions>, color: IroColor) {\n  const hue = color.hue;\n  return [\n    // saturation gradient\n    [\n      [0, '#fff'],\n      [100, `hsl(${hue},100%,50%)`],\n    ],\n    // lightness gradient\n    [\n      [0, 'rgba(0,0,0,0)'],\n      [100, '#000'],\n    ]\n  ];\n}","import { IroColorPickerOptions } from './colorPickerOptions';\n\n/**\n * @desc Resolve an SVG reference URL\n * This is required to work around how Safari and iOS webviews handle gradient URLS under certain conditions\n * If a page is using a client-side routing library which makes use of the HTML <base> tag, \n * Safari won't be able to render SVG gradients properly (as they are referenced by URLs)\n * More info on the problem: \n * https://stackoverflow.com/questions/19742805/angular-and-svg-filters/19753427#19753427\n * https://github.com/jaames/iro.js/issues/18\n * https://github.com/jaames/iro.js/issues/45\n * https://github.com/jaames/iro.js/pull/89\n * @props url - SVG reference URL\n */\nexport function resolveSvgUrl(url: string) {\n  // Keep track of html <base> elements for resolveSvgUrl\n  // getElementsByTagName returns a live HTMLCollection, which stays in sync with the DOM tree\n  // So it only needs to be called once\n  const BASE_ELEMENTS = document.getElementsByTagName('base')\n  // Sniff useragent string to check if the user is running Safari\n  const ua = window.navigator.userAgent;\n  const isSafari = /^((?!chrome|android).)*safari/i.test(ua);\n  const isIos = /iPhone|iPod|iPad/i.test(ua);\n  const location = window.location;\n  return ((isSafari || isIos) && (BASE_ELEMENTS.length > 0)) ? `${location.protocol}//${location.host}${location.pathname}${location.search}${url}` : url;\n}\n\n/**\n * @desc Get the path commands to draw an svg arc\n * @props cx - arc center point x\n * @props cy - arc center point y\n * @props radius - arc radius\n * @props startAngle - arc start angle\n * @props endAngle - arc end angle\n */\nexport function getSvgArcPath(cx: number, cy: number, radius: number, startAngle: number, endAngle: number) {\n  const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n  startAngle *= Math.PI / 180;\n  endAngle *= Math.PI / 180;\n  const x1 = cx + radius * Math.cos(endAngle);\n  const y1 = cy + radius * Math.sin(endAngle);\n  const x2 = cx + radius * Math.cos(startAngle);\n  const y2 = cy + radius * Math.sin(startAngle);\n  return `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 0 ${x2} ${y2}`;\n}\n\n/**\n * @desc Given a specifc (x, y) position, test if there's a handle there and return its index, else return null.\n *       This is used for components like the box and wheel which support multiple handles when multicolor is active\n * @props x - point x position\n * @props y - point y position\n * @props handlePositions - array of {x, y} coords for each handle\n */\nexport function getHandleAtPoint(props: Partial<IroColorPickerOptions>, x: number, y: number, handlePositions: {x: number, y: number}[]) {\n  for (let i = 0; i < handlePositions.length; i++) {\n    const dX = handlePositions[i].x - x;\n    const dY = handlePositions[i].y - y;\n    const dist = Math.sqrt(dX * dX + dY * dY);\n    if (dist < props.handleRadius) {\n      return i;\n    }\n  }\n  return null;\n}","import { IroColor, IroColorValue } from './color';\n\nexport type LayoutDirection = 'vertical' | 'horizontal' | '';\n\nexport type WheelDirection = 'clockwise' | 'anticlockwise' | '';\n\nexport interface IroColorPickerOptions {\n  width?: number;\n  height?: number;\n  handleRadius?: number;\n  handleSvg?: string;\n  handleProps?: any;\n  color?: IroColorValue;\n  colors?: IroColorValue[];\n  borderColor?: string;\n  borderWidth?: number;\n  wheelLightness?: boolean;\n  wheelAngle?: number;\n  wheelDirection?: WheelDirection;\n  layoutDirection?: LayoutDirection;\n  sliderSize?: number;\n  sliderMargin?: number;\n  padding?: number;\n}\n\nexport const iroColorPickerOptionDefaults: IroColorPickerOptions = {\n  width: 300,\n  height: 300,\n  handleRadius: 8,\n  handleSvg: null,\n  handleProps: {x: 0, y: 0},\n  color: '#fff',\n  colors: [],\n  borderColor: '#fff',\n  borderWidth: 0,\n  wheelLightness: true,\n  wheelAngle: 0,\n  wheelDirection: 'anticlockwise',\n  layoutDirection: 'vertical',\n  sliderSize: null,\n  sliderMargin: 12,\n  padding: 6,\n}"],"names":["const","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH_3","PERMISSIVE_MATCH_4","REGEX_FUNCTIONAL_RGB","RegExp","REGEX_FUNCTIONAL_RGBA","REGEX_FUNCTIONAL_HSL","REGEX_FUNCTIONAL_HSLA","HEX_START","HEX_INT_SINGLE","HEX_INT_DOUBLE","REGEX_HEX_3","REGEX_HEX_4","REGEX_HEX_6","REGEX_HEX_8","KELVIN_MIN","KELVIN_MAX","log","round","floor","clamp","num","min","max","Math","parseUnit","str","isPercentage","indexOf","parseFloat","parseHexInt","parseInt","intToHex","int","toString","padStart","IroColor","constructor","value","onChange","$","h","s","v","a","set","initialValue","test","hexString","rgbString","hslString","hsv","rgb","hsl","Error","setChannel","format","channel","reset","hsva","clone","unbind","undefined","hsvToRgb","i","f","p","q","t","mod","r","g","b","rgbToHsv","delta","hue","saturation","hsvToHsl","l","divisor","hslToHsv","kelvinToRgb","kelvin","temp","rgbToKelvin","eps","minTemp","maxTemp","newValue","oldValue","changes","let","key","alpha","red","green","blue","rgba","hsla","match","exec","rgbaString","hex8String","hslaString","sliderDefaultOptions","sliderShape","sliderType","minTemperature","maxTemperature","getSliderStyles","props","layoutDirection","sliderMargin","getSliderDimensions","width","sliderSize","borderWidth","handleRadius","padding","ishorizontal","handleStart","handleRange","height","cx","cy","radius","x","y","getCurrentSliderValue","color","temperatureRange","percent","getSliderValueFromInput","handlePos","getSliderHandlePosition","sliderValue","midPoint","getSliderGradient","stops","numStops","range","stop","push","noSat","fullSat","getSliderGradientCoords","x1","y1","x2","y2","getWheelDimensions","rad","translateWheelAngle","angle","invert","wheelAngle","wheelDirection","getWheelHandlePosition","handleAngle","PI","handleDist","direction","cos","sin","getWheelValueFromInput","atan2","sqrt","getBoxStyles","getBoxDimensions","getBoxValueFromInput","handleRangeX","handleRangeY","percentX","percentY","getBoxHandlePosition","getBoxGradients","resolveSvgUrl","url","BASE_ELEMENTS","document","getElementsByTagName","ua","window","navigator","userAgent","isSafari","isIos","location","length","protocol","host","pathname","search","getSvgArcPath","startAngle","endAngle","largeArcFlag","getHandleAtPoint","handlePositions","dX","dY","dist","iroColorPickerOptionDefaults","handleSvg","handleProps","colors","borderColor","wheelLightness"],"mappings":"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"}